import { Component } from '../component';
import tg from '../tag';
import { getJsonFromUrl, getParamsFromJson } from '../url';
import { text } from '../util';
import { renderDOM } from '../main';

class List extends Component {
    setup(init) {
        this.items = init.items || [];
        this.ordered = init.ordered || false;
    }

    render() {
        var items = [];
        for (var i=0; i<this.items.length; ++i) {
            var item = this.items[i];
            items.push(tg.li({
                text: text(item)
            }));
        }

        return (this.ordered ? tg.ol : tg.ul)({
            children: items
        });
    }
}

class Table extends Component {
    setup(init) {
        this.rows = init.rows || [[]];
        this.header = init.header || false;
    }

    render() {
        var rows = [];
        for (var i=0; i<this.rows.length; ++i) {
            var cells = [];
            for (var j=0; j<this.rows[i].length; ++j) {
                var cell = this.rows[i][j];
                var element = (i === 0 && this.header ? tg.th : tg.td);
                cells.push(element({
                    text: text(cell)
                }));
            }
            rows.push(tg.tr({
                children: cells
            }));
        }
        return tg.table({
            style: 'width:100%',
            children: rows
        });
    }
}

class Link extends Component {
    setup(init) {
        this.to = init.to || '/';
        this.button = init.button || tg.a();
        this.params = init.params || {};
        this.button.extend({
            href: '#',
            onclick: (e) => {
                if (window.SITE_ROOT == null) {
                    console.alert('window.SITE_ROOT not defined. Assuming index is hosted at "/"');
                    window.SITE_ROOT = '/';
                }

                // put this into its own function
                const urlParams = getParamsFromJson(this.params);
                
                let url = window.SITE_ROOT + this.to;

                if (urlParams) {
                    url += '?' + urlParams;
                }

                try {
                    history.pushState({ }, null, url);
                } catch (DOMException) {
                    console.error('This site uses the History API. You must host the site on a web server for any routing to work. Also, remember to set SITE_ROOT to specify the root of where the site is hosted.');
                    return;
                }
                
                renderDOM();
                
                e.preventDefault();
            }
        });
    }

    render() {
        return this.button;
    }
}

class Route extends Component {
    setup(init) {
        this.path = init.path || '/';
        this.component = init.component || Body;
        this.exact = init.exact == true;        
    }

    render() {
        var parser = document.createElement('a');
        parser.href = window.location.href;
        
        const path = parser.pathname;

        const base = window.SITE_ROOT;

        // relies on SITE_ROOT not ending in a '/'
        const effectivePath = path.substring(path.indexOf(base) + base.length, path.length);

        if (this.exact) {
            if (effectivePath === this.path) {
                return new this.component({ params: getJsonFromUrl() });
            }
        } else {
            if (path.indexOf(this.path) > -1) {
                return new this.component({ params: getJsonFromUrl() });
            }

        }
        
        return tg.div(); // make this actually be nothing
    }
};

export default {
    List,
    Table,
    Link,
    Route,
};
